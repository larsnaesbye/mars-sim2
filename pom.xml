<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- ************************************************************************************************* -->
	<!-- * General Section * -->
	<!-- ************************************************************************************************* -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mars-sim</groupId>
	<artifactId>mars-sim</artifactId>
	<packaging>pom</packaging>
	<version>3.7.0</version>
	<name>mars-sim</name>
	<url>https://github.com/mars-sim/mars-sim</url>
	<inceptionYear>2009</inceptionYear>
	<properties>
		<release>17</release>
		<project.version>3.7.0</project.version>
		<fxgl.version>11.17</fxgl.version>
		<junit-jupiter.version>5.10.0</junit-jupiter.version>
        <!-- optional : if we want to use a junit4 specific version -->
        <junit.version>4.13.2</junit.version>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<!-- Set file encoding to UTF-8. See https://stackoverflow.com/questions/3017695/how-to-configure-encoding-in-maven#3018152 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<libgdx.version>1.12.1</libgdx.version>
		<lwjgl.version>3.2.3</lwjgl.version>
		<kotlin.version>1.9.21</kotlin.version>
		<!--  TextIO needs 1.8 -->
		<slf4j.version>2.0.9</slf4j.version>
		<commons-cli.version>1.6.0</commons-cli.version>
		<commons-io.version>2.13.0</commons-io.version>
		<commons-lang3.version>3.14.0</commons-lang3.version>
		<commons-math3.version>3.6.1</commons-math3.version>	
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
  		<sonar.java.source>17</sonar.java.source>
  		<native.maven.plugin.version>0.9.27</native.maven.plugin.version>
	</properties>
	<profiles>
		<profile>
		  <id>coverage</id>
		  <build>
		   <plugins>
			<plugin>
			  <groupId>org.jacoco</groupId>
			 <artifactId>jacoco-maven-plugin</artifactId>
			  <version>0.8.11</version>
			  <executions>
				<execution>
				  <id>prepare-agent</id>
				  <goals>
					<goal>prepare-agent</goal>
				  </goals>
				</execution>
				<execution>
				  <id>report</id>
				  <goals>
					<goal>report</goal>
				  </goals>
				  <configuration>
					<formats>
					  <format>XML</format>
					</formats>
				  </configuration>
				</execution>
			  </executions>
			</plugin>
		   </plugins>
		  </build>
		</profile>
	</profiles>
	<dependencies>
		<!-- Needed by graalvm -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.10.1</version>
			<scope>test</scope>
		</dependency>		
		<!-- https://stackoverflow.com/questions/41635164/is-junit5-backward-compatible-to-junit4 -->
        <!--JUnit Jupiter Engine to depend on the JUnit5 engine and JUnit 5 API -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
		<!-- Incorporate junit-vintage to cover junit4 tests -->
        <!--JUnit Jupiter Engine to depend on the JUnit4 engine and JUnit 4 API  -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-jupiter.version}</version>
        </dependency>
        <!-- Optional : override the JUnit 4 API version provided by junit-vintage-engine -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
	<!-- ************************************************************************************************* -->
	<!-- * Developers Section * -->
	<!-- ************************************************************************************************* -->
	<developers>
		<developer>
			<name>Manny Kung</name>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-8</timezone>
		</developer>
		<developer>
			<name>Dennis Krenz</name>
			<roles>
				<role>conceptual design</role>
			</roles>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<name>Barry Evans</name>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>

	<!-- ************************************************************************************************* -->
	<!-- * Module Section * -->
	<!-- ************************************************************************************************* -->
	<modules>
    	<module>mars-sim-tools</module>
		<module>mars-sim-mapdata</module>
		<module>mars-sim-main</module>
		<module>mars-sim-headless</module>
		<module>mars-sim-console</module>
		<module>mars-sim-core</module>
		<module>mars-sim-ui</module>
    	<module>mars-sim-base</module>
		<module>mars-sim-fxgl</module>
    	<module>mars-sim-libgdx</module>
	</modules>
  
	<!-- ************************************************************************************************* -->
	<!-- * Build Section * -->
	<!-- ************************************************************************************************* -->
	<build>
		<pluginManagement>
			<plugins>
				
				<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-maven-plugin -->
				<plugin>
					<groupId>org.jetbrains.kotlin</groupId>
					<artifactId>kotlin-maven-plugin</artifactId>
					<version>${kotlin.version}</version>
					<executions>
						<execution>
							<id>compile</id>
							<phase>process-sources</phase>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
									<sourceDir>${project.basedir}/src/main/java</sourceDir>
									<sourceDir>${project.basedir}/src/main/resources</sourceDir>
								</sourceDirs>
							</configuration>
						</execution>
						<execution>
		                    <id>test-compile</id>
		                    <phase>process-test-sources</phase>
		                    <goals>
		                        <goal>test-compile</goal>
		                    </goals>
		                    <configuration>
		                        <sourceDirs>
		                            <source>${project.basedir}/src/test/java</source>
		                            <source>${project.basedir}/src/test/kotlin</source>
		                            <source>${project.basedir}/src/test/resources</source>
		                        </sourceDirs>
		                    </configuration>
		                </execution>
					</executions>
					<dependencies>
						<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib-common
						<dependency>
						    <groupId>org.jetbrains.kotlin</groupId>
						    <artifactId>kotlin-stdlib-common</artifactId>
						    <version>${kotlin.version}</version>
						</dependency-->
						<dependency>
							<groupId>org.jetbrains.kotlin</groupId>
							<artifactId>kotlin-stdlib</artifactId>
							<version>${kotlin.version}</version>
						</dependency>
						<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-compiler -->
						<dependency>
						    <groupId>org.jetbrains.kotlin</groupId>
						    <artifactId>kotlin-compiler</artifactId>
						    <version>${kotlin.version}</version>
						</dependency>
						<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-scripting-compiler -->
						<dependency>
						    <groupId>org.jetbrains.kotlin</groupId>
						    <artifactId>kotlin-scripting-compiler</artifactId>
						    <version>${kotlin.version}</version>
						</dependency>
					</dependencies>
					<!--dependencies>
						<dependency>
							<groupId>org.jetbrains.kotlin</groupId>
							<artifactId>kotlin-maven-allopen</artifactId>
							<version>${kotlin.version}</version>
						</dependency>
					</dependencies-->
				</plugin>
				<plugin>
				<!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
				  <groupId>com.github.spotbugs</groupId>
				  <artifactId>spotbugs-maven-plugin</artifactId>
				  <version>4.8.1.0</version>
				  <dependencies>
				    <!-- https://github.com/spotbugs/spotbugs -->
				    <dependency>
				      <groupId>com.github.spotbugs</groupId>
				      <artifactId>spotbugs</artifactId>
				      <version>4.8.1</version>
				    </dependency>
				  </dependencies>
				</plugin>
				<!--  https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>versions-maven-plugin</artifactId>
				    <version>2.16.2</version>
				    <configuration>
				        <generateBackupPoms>false</generateBackupPoms>
				    </configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-surefire-plugin</artifactId>
				    <version>3.2.2</version>
				    <configuration>
						<includes>
							<include>%regex[.*]</include>
						</includes>
				    </configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-failsafe-plugin</artifactId>
				    <version>3.2.2</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						<configuration>
						</configuration>
						</execution>
    				</executions>				    
				    <configuration>
				    </configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.11.0</version>
					<configuration>
						<release>${release}</release>
						<compilerArgs>
			            	<arg>-Xlint:unchecked</arg>
			            	<arg>-Xlint:deprecation</arg>
			            	<arg>-Xlint:removal</arg>
						</compilerArgs>
						<showWarnings>false</showWarnings>
                        <showDeprecation>false</showDeprecation>
						<verbose>false</verbose>
					</configuration>
					<!-- see https://www.baeldung.com/kotlin-maven-java-project -->
					<!-- see https://kotlinlang.org/docs/reference/using-maven.html -->
	       			<executions>
		                <!-- Replacing default-compile as it is treated specially by maven -->
		                <execution>
		                    <id>default-compile</id>
		                    <phase>none</phase>
		                </execution>
		                <!-- Replacing default-testCompile as it is treated specially by maven -->
		                <execution>
		                    <id>default-testCompile</id>
		                    <phase>none</phase>
		                </execution>
		                <execution>
		                    <id>java-compile</id>
		                    <phase>compile</phase>
		                    <goals> <goal>compile</goal> </goals>
		                </execution>
		                <execution>
		                    <id>java-test-compile</id>
		                    <phase>test-compile</phase>
		                    <goals> <goal>testCompile</goal> </goals>
		                </execution>
	            	</executions>
				</plugin>

				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin : 33KB-->
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.1</version>
					<executions>
						<execution>
							<id>default-deploy</id>
							<phase>deploy</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<!-- https://mvnrepository.com/artifact/org.apache.maven.wagon/wagon-ssh -->
						<dependency>
						    <groupId>org.apache.maven.wagon</groupId>
						    <artifactId>wagon-ssh</artifactId>
						    <version>3.5.3</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
					<groupId>org.apache.maven.plugins</groupId>
			        <artifactId>maven-war-plugin</artifactId>
			        <version>3.4.0</version>
			        <configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
			        </configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- ************************************************************************************************* -->
	<!-- * Reporting Section * -->
	<!-- ************************************************************************************************* -->
	<reporting>
		<plugins>
			<plugin>
				<!-- https://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-project-dependencies.html -->
				<!-- See https://maven.apache.org/plugins/maven-dependency-plugin/usage.html -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<outputDirectory>
						${project.build.directory}
					</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</reporting>


	<!-- ************************************************************************************************* -->
	<!-- * Repository Section * -->
	<!-- ************************************************************************************************* -->
	<repositories>
		<repository>
	        <id>maven-central-repo</id>
	        <url>https://repo1.maven.org/maven2</url>
	        <releases>
                <enabled>true</enabled>
            </releases>
	        <snapshots>
	            <enabled>true</enabled>
	        </snapshots>
	    </repository>
		<repository>
			<id>mars-sim</id>
			<name>mars-sim Project Old Maven Repository</name>
			<url>https://mars-sim.sourceforge.io/maven-repo/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>maven central</id>
			<url>https://repo1.maven.org/maven/</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype</id>
			<name>Sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
		</pluginRepository>
		<pluginRepository>
	        <id>graalvm-native-build-tools-snapshots</id>
	        <name>GraalVM native-build-tools Snapshots</name>
	        <url>https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots</url>
	        <releases>
	            <enabled>false</enabled>
	        </releases>
	        <snapshots>
	            <enabled>true</enabled>
	        </snapshots>
		</pluginRepository>		
	</pluginRepositories>
</project>